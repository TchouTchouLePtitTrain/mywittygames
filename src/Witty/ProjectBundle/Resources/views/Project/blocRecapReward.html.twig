{% set creditRecuperable = app.user.getCreditRecuperable(reward.project.id) %}

<form id="confirmation_form" action="{{ witty_paypal_url }}" method="post" target="paypal">


	{# Champs obligatoires pour paypal #}
	<input type="hidden" name="fees" value="{{ max(reward.cost - (app.user.credit + creditRecuperable), 0) *  witty_paypal_fees }}"/>
	<input type="hidden" name="amount" value="{{ app.user.credit - min( (reward.cost - creditRecuperable), app.user.credit) }}"/>
	<input type="hidden" value="EUR" name="currency_code">
	<input type="hidden" value="{{ public_url_mwg }}{{ path('transaction_success') }}" name="notify_url"> {# adresse de retour des IPN -> transaction/sendback #}
	<input type="hidden" value="{{ public_url_mwg }}{{ path('transaction_cancel') }}" name="cancel_url"> {# adresse de retour des IPN -> transaction/sendback #}
	<input type="hidden" value="{{ public_url_mwg }}{{ path('transaction_return') }}" name="return_url"> {# adresse de retour des IPN -> transaction/sendback #}

	{# Champs pour la configuration de paypal #}
	<input type="hidden" value="1" name="no_note"> {# pas de commentaire lors de l'achat #}
	<input type="hidden" value="1" name="no_shipping"> {# pas de frais de port #}
	<input type="hidden" value="FR" name="lc"> {# locale #}
	<input type="hidden" value="2" name="rm"> {# retour par post #}
	<input type="hidden" value="_xclick" name="cmd"> {# bouton buy now #}
	<input type="hidden" value="{{ witty_paypal_email_business }}" name="business"> {# adresse notification #}
	<input type="hidden" value="Paiement" name="item_name"> {# libelle qui apparait sur paypal #}
	<input type="hidden" value="Retourner sur MyWittyGames.com" name="cbt"> {# texte du bouton de fin de commande #}
	<input type="hidden" value="PP-ShopCartBF:btn_cart_LG.gif:NonHosted" name="bn"> {# optionnel on s'en fout #}

	{# Champs pour l'auto-remplissage des informations sur paypal #}
	<input type="hidden" value="{{ app.user.email }}" name="email">
	<input type="hidden" value="{{ app.user.city }}" name="city">
	<input type="hidden" value="{{ app.user.postcode }}" name="zip">
	<input type="hidden" value="{{ app.user.firstname }}" name="first_name">
	<input type="hidden" value="{{ app.user.lastname }}" name="last_name">
	<input type="hidden" value="{{ app.user.address }}" name="address1">
	<input type="hidden" value="{{ app.user.address2 }}" name="address2">

	{# Champs pour le traitement de la réponse #}
	<input type="hidden" value="u={{ app.user.id }}&rw={{ reward.id }}" name="custom">

	
	
	
	
	{% if app.user.getUserRewardsByProjectId(reward.project.id)|length > 0 %}
		<p class="sousTitre_recap">Vous avez déjà la contrepartie</p>
		<br/>
		<p class="sousTitre_recap">{{ first(app.user.getUserRewardsByProjectId(reward.project.id)).reward.title }}</p>
		<br/>
		<p class="sousTitre_recap">Vous allez l'annuler et choisir la contrepartie suivante :</p>
		<br/>
	{% endif %}
	
	<p class="sousTitre_recap">{{ reward.title }}</p>
	<input type='hidden' id='reward_value' name="reward_value" value='{{ reward.cost }}'/>
	<input type='hidden' id='reward_id' name="reward_id" value='{{ reward.id }}'/>
	<br/>
	
	{% if reward.options|length > 0 %}
	
		<hr class="filet"/>

		<p class="sousTitre_recap">Options disponibles</p>
		
		<div class="texte_droite">
		{% for option in reward.options %}
			<input type='checkbox' id='option_{{ option.id }}' name="options[]" value='{{ option.id }}' checked="0"/>
			<label for="chkbox_{{ option.id }}">{{ option.title }} <p class="euro"> + {{ option.cost }} €</p></label>
			<input type='hidden' id='option_value_{{ option.id }}' name="options[]" value='{{ option.cost }}'/>
			<br/>
		{% endfor%}
		</div>

	{% endif %}
	<div class="spacer"></div>

	<hr class="filet"/>

	<p class="sousTitre_recap">Coût total</p>
	
	<div class="paiement_recap">
		<img class="img_merci" alt=""/>
		<div class="paiement_recap_texte">
			Montant de votre soutien
			<p class="euro"> <output type='number' id='total_reward' name='total_reward'>{{ reward.cost }}</output> €</p>
			<br/>
			Options
			<p class="euro"> <output type='number' id='total_options' name='total_options'>+ 0</output> €</p>
			<br/>
			Annulation contrepartie
			<p class="euro"> <output type='number' id='credit_recuperable' name='credit_recuperable'>- {{ creditRecuperable }}</output> €</p>
			<br/>
			{% if app.user.credit != 0 %}
				Crédit utilisé
				<p class="euro"> <output type='number' id='credit_utilise' name='credit_utilise'>- {{ min(reward.cost - creditRecuperable, app.user.credit) }}</output> €</p>
			{% endif %}
			<hr class="filet2"/>
			Sous-total
			<p class="euro"> <output type='number' id='sous_total' name='sous_total'>{{ max(reward.cost - (app.user.credit + creditRecuperable), 0) }}</output> €</p><br/>
			Frais de gestion Paypal
			<p class="euro"> <output type='number' id='frais_gestion' name='frais_gestion'>+ {{ max(min(reward.cost, (app.user.credit +  creditRecuperable)), 0) *  witty_paypal_fees }}</output> €</p>
			<hr class="filet2"/>
			Total
			<p class="euro"> <output type='number' id='total' name='total'>{{ max(min(reward.cost, (app.user.credit +  creditRecuperable)), 0) * (1 +  witty_paypal_fees) }}</output> €</p>
			<br/>
			{#
				{% if app.user.credit != 0 %}
					Crédit restant
					<p class="euro"> <output type='number' id='credit_restant' name='credit_restant'>{{ app.user.credit - min( (reward.cost - creditRecuperable), app.user.credit) }}</output> €</p>
					<hr class="filet2"/>
				{% endif %}
			#}
		</div>
	</div>

	<div class="spacer"></div>

	<input type='submit' name='submit' value=''/>
	<!-- <input name="submit" src="https://www.paypal.com/fr_FR/FR/i/btn/btn_buynow_LG.gif" type="image" /><img src="https://www.paypal.com/fr_FR/i/scr/pixel.gif" border="0" alt="" width="1" height="1" /> -->

</form>
<div class="spacer"></div>

	
<script>

	$(document).ready(function()
	{
		calculTotaux();
	
		//Gestion des checkboxes
		$('input[type="checkbox"][id*="option_"]').click(function(event)
		{
			calculTotaux();
		});
		
		$('#bloc_contreparties a.blocReward').click(function(event)
		{
			var rewardId = parseInt($(this).attr('id').substring('lien_reward_'.length, $(this).attr('id').length));
			$.get("{{ path('project_blocRecapReward', {'rewardId': null}) }}"+"/"+rewardId, function(data)
				{
					$('#blocRecap').html(data);
					calculTotaux();
					$('input[type="checkbox"][id*="option_"]').click(function(event) //Attache des handlers
					{
						calculTotaux();
					});
				}
			);
		});
		
	});


	function calculTotaux()
	{
		var total_reward = parseInt($('#reward_value').attr('value'));
		
		//Calcul du total des options
		var total_options = 0;
		
		var options_ids = ""; //Pour contruire le champ custom		
		$('input[type="checkbox"][id*="option_"]:checked').each(function(key, value)
		{
			total_options += parseInt($('input[type="hidden"][id*="option_value_'+$(this).attr("value")+'"]').attr("value"));
			if (options_ids == "")
			{
				options_ids += $(this).attr("value"); 
			}
			else
			{
				options_ids += ','+$(this).attr("value");
			}
			
		});
		if (options_ids != "") { options_ids = "&opt="+options_ids; }
		
		//Mise à jour des totaux
		var credit_recuperable = {{ app.user.getCreditRecuperable(reward.project.id) }};
		var sous_total_1 = total_reward + total_options;
		var credit_anterieur_utilise = Math.max( Math.min(sous_total_1 - credit_recuperable, {{ app.user.credit }}), 0); // Calcul du crédit avant annulation de la contrepartie qui va être utilisé
		var credit_utilise = Math.max( Math.min(sous_total_1 - credit_recuperable, {{ app.user.credit }}), 0); // Calcul du crédit après annulation de la contrepartie qui va être utilisé
		var credit_restant = {{ app.user.credit }} - credit_utilise; 
		var sous_total_2 = sous_total_1 - credit_utilise - credit_recuperable;
		var paypal_fees = Math.ceil( (sous_total_2 * {{ witty_paypal_fees }}).toPrecision(3) * 100) / 100; //On prend 2 décimales, arrondies au supérieur
		var total = sous_total_2 + paypal_fees;

		$('#total_reward').html(total_reward);
		$('#total_options').html('+ '+total_options);
		$('#credit_recuperable').html('- '+credit_recuperable);
		if ({{ app.user.credit }} != 0) //Si l'utilisateur a du crédit
		{
			var affichage_credit_utilise = Math.max(0, credit_anterieur_utilise);
			if (affichage_credit_utilise != 0) affichage_credit_utilise = "- "+affichage_credit_utilise;
			$('#credit_utilise').html(affichage_credit_utilise);
			$('#credit_restant').html(credit_restant);
		}
		
		var affichage_sous_total_2 = Math.max(0, sous_total_2);
		
		var affichage_paypal_fees = Math.max(0, paypal_fees);
		if (affichage_paypal_fees != 0) affichage_paypal_fees = "+ "+affichage_paypal_fees;	
		
		var affichage_total = Math.max(0, total);	
		
		$('#sous_total').html(affichage_sous_total_2);
		$('#frais_gestion').html(affichage_paypal_fees);
		$('#total').html(affichage_total);
		
		//Mise à jour du formulaire
		if (total <= 0) //S'il n'y a rien à payer, on ne passe pas par Paypal
		{
			$('#confirmation_form').attr('action', "{{ path('transaction_success') }}");
			$('#confirmation_form').removeAttr('target');
		}
		else
		{	
			$('#confirmation_form').attr('action', '{{ witty_paypal_url }}');
			$('#confirmation_form').attr('target', 'paypal');
		}
		
		//Mise à jour des champs pour paypal
		$('input[type="hidden"][name="amount"]').attr('value', total);
		$('input[type="hidden"][name="fees"]').attr('value', paypal_fees);
		$('input[type="hidden"][name="custom"]').attr('value', 'u={{ app.user.id }}&rw='+parseInt($('#reward_id').attr('value'))+options_ids); //Champ pour traiter le retour de Paypal
	}

</script>